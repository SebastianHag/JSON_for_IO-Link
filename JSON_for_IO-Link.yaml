openapi: 3.0.1
info:
  description: >-
    This is a sample IO-Link Master server. You can find out more about IO-Link
    at [http://www.io-link.com](http://www.io-link.com)

    # Description

    [Here you can put a general description of the API.]

    ## Error messages

    ### IODD Upload error codes

    * [1] Unable to upload IODD XML file. Insufficient memory space.

    * [2] Uploaded file is no valid IODD XML. Upload rejected.
      - Remark: We could check the file content superficially to ensure that the IODD is an XML and an IODD (e.g. vendorId, deviceId, VendorName, ProductName and other mandatory elements or attributes).
    * [3] Uploaded file is no valid IODD XML. CRC check failed. Upload rejected.

    * [4] Uploaded file is no valid IODD XML. Parsing failed. Upload rejected.
      - Remark: All those systems that do not want to store the IODD have to parse it immediately.

    ### Process Data handling

    * [5] Writing processdata to Pin 2 is not possible. Pin 2 is not configured
    as DIGITAL_OUTPUT.

    * [6] Writing processdata to Pin 4 is not possible. Pin 4 is not configured
    as DIGITAL_OUTPUT.

    * [7] Attached IO-Link device has no output process data.

    ### Process data with IODD.

    * [8] HTTP Status 400: IODD is not available.

    ### Data Storage

    * [9] HTTP Status 400: Mismatch between configured device and data storage
    meta data.

    ### General

    //e.g. if a master does not support an operation

    * [10] HTTP Status 404: Operation not implemented.

    ### Implementation hint:

    Specific error messages have to be provided only if the corresponding
    operation is supported. So you do not need to give specific errors for bad
    IODDs, just indicate error 10.
  version: 0.0.5
  title: Swagger IO-Link Master
  contact:
    email: lorand.molnar@teconcept.de
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://iolmaster.io-link.com/{basePath}'
    variables:
      basePath:
        default: iol/v1
tags:
  - name: gateway
    description: Access to parameters of the JSON gateway
  - name: master
    description: Access to parameters of the IO-Link master itself
  - name: ports
    description: Access to the IO-Link ports of the IO-Link master
  - name: devices
    description: Access to the IO-Link Devices connected ot the Master
paths:
  '/gateway/capabilites':
    get:
      tags:
        - gateway
      summary: Read the capabilities of the gateway
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewayCapabilitiesGet'
  '/gateway/configuration':
    get:
      tags:
        - gateway
      summary: Read the configuration of the REST API Gateway Application
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configurationGetPost'
    post:
      tags:
        - gateway
      summary: Update the configuration of the REST API Gateway Application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configurationGetPost'
      responses:
        '200':
          description: Successful operation
  '/gateway/reset':
    post:
      tags:
        - gateway
      summary: Invoke a reset of the Gateway application
      responses:
        '200':
          description: Successful operation
  '/gateway/reboot':
    post:
      tags:
        - gateway
      summary: Invoke a reboot of the Gateway application
      responses:
        '200':
          description: Successful operation
  '/masters':
    get:
      tags:
        - master
      summary: >-
        Read all the available masterNumber keys with the corresponding
        identification information.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identificationMasters'
  '/masters/{masterNumber}/identification':
    get:
      tags:
        - master
      summary: Read the identification of the IO-Link master
      parameters:
        - $ref: '#/components/parameters/masterNumber'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/identificationGet'
    post:
      tags:
        - master
      summary: Write application specific identification
      parameters:
        - $ref: '#/components/parameters/masterNumber'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/identificationPost'
      responses:
        '200':
          description: Successful operation
  '/masters/{masterNumber}/capabilities':
    get:
      tags:
        - master
      summary: Read the capabilities of the master
      parameters:
        - $ref: '#/components/parameters/masterNumber'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/masterCapabilitiesGet'
  '/gateway/events':
    get:
      tags:
        - gateway
      summary: Read the event queue
      parameters:
        - $ref: '#/components/parameters/eventOrigin'
        - $ref: '#/components/parameters/eventMasterNumber'
        - $ref: '#/components/parameters/eventPortNumber'
        - $ref: '#/components/parameters/eventDeviceName'
        - $ref: '#/components/parameters/eventTop'
        - $ref: '#/components/parameters/eventBottom'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gatewayEventsGet'
  '/gateway/mqtt/configuration':
    get:
      tags:
        - gateway
      summary: Read the MQTT configuration of the master
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttConfigurationGetPost'
    post:
      tags:
        - gateway
      summary: Update the MQTT configuration of the master
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttConfigurationGetPost'
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/errorResponse'
  '/gateway/mqtt/configuration/topics':
    get:
      tags:
        - gateway
      summary: Get the list of MQTT topics
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mqttConfigurationTopicGet'
              example:
                - topicId: 1
                  topicName: PD input
                  qos: At leas once
                  deviceName: DT35
                  processData:
                    direction: in
                    format: iodd
                    interval:
                      value: 10
                      unit: ms
                - topicId: 2
                  topicName: Event
                  qos: At most once
                  deviceName: TAD081
                  event: null
                - topicId: 3
                  topicName: PD
                  qos: At leas once
                  deviceName: BNI_IOL
                  processData:
                    direction: both
                    format: iodd
                    onChange: true
    post:
      tags:
        - gateway
      summary: Create a new MQTT topic
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mqttConfigurationTopicPost'
      responses:
        '200':
          description: Successful operation returning the topic ID
          content:
            application/json:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/errorResponse'
  '/gateway/mqtt/configuration/topics/{topicId}':
    get:
      tags:
        - gateway
      summary: Get one MQTT topic
      parameters:
        - $ref: '#/components/parameters/mqttTopicId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mqttConfigurationTopicGet'
        '400':
          $ref: '#/components/responses/errorResponse'
    delete:
      tags:
        - gateway
      summary: Delete the specified MQTT topic
      parameters:
        - $ref: '#/components/parameters/mqttTopicId'
      responses:
        '200':
          description: Successful operation
        '400':
          $ref: '#/components/responses/errorResponse'
  '/gateway/iodds':
    get:
      tags:
        - gateway
      summary: List of all IODD (representations) that are available on the gateway.
      description: >-
        Only one version of an IODD is stored on the webserver at the same time
        for one vendorId-deviceId-combination.
      responses:
        '200':
          description: An IODD XML file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ioddsGet'
    post:
      tags:
        - gateway
      summary: Update or create an IODD
      description: >
        I do not need to specifiy the identification data for this action as the
        parser can read this information.
      requestBody:
        required: true
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/ioddFile'
      responses:
        '200':
          description: Successful operation
  '/gateway/iodds/vendors/{vendorId}/devices/{deviceId}/revisions/{ioLinkRevision}':
    get:
      tags:
        - gateway
      summary: Get a specific IODD
      description: '[optional] (makes only sense if the server stores the IODDs as files)'
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/ioLinkRevision'
      responses:
        '200':
          description: An IODD XML file
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ioddFile'
    delete:
      tags:
        - gateway
      summary: Delete a specific IODD representation
      parameters:
        - $ref: '#/components/parameters/vendorId'
        - $ref: '#/components/parameters/deviceId'
        - $ref: '#/components/parameters/ioLinkRevision'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ioddsGet'
  '/masters/{masterNumber}/ports':
    get:
      tags:
        - ports
      summary: Read all the available portId keys
      parameters:
        - $ref: '#/components/parameters/masterNumber'
      responses:
        '200':
          description: Successful operation
          content:
            applicaion/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - portNumber
                  properties:
                    portNumber:
                      type: number
                example:
                  - portNumber: 1
                  - portNumber: 2
                  - portnumber: 3
                  - portnumber: 4
  '/masters/{masterNumber}/ports/{portNumber}/status':
    get:
      tags:
        - ports
      summary: Read the status of the selected port
      parameters:
        - $ref: '#/components/parameters/masterNumber'
        - $ref: '#/components/parameters/portNumber'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portStatusGet'
  '/masters/{masterNumber}/ports/{portNumber}/capabilities':
    get:
      tags:
        - ports
      summary: Read the capability information of the specified port
      parameters:
        - $ref: '#/components/parameters/masterNumber'
        - $ref: '#/components/parameters/portNumber'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portCapabilitiesGet'
  '/masters/{masterNumber}/ports/{portNumber}/configuration':
    get:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/masterNumber'
        - $ref: '#/components/parameters/portNumber'
      summary: Read the configuration of the specified port
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portConfigurationGet'
    post:
      tags:
        - ports
      summary: Write the configuration of the specified port
      parameters:
        - $ref: '#/components/parameters/masterNumber'
        - $ref: '#/components/parameters/portNumber'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/portConfigurationPost'
      responses:
        '200':
          description: Successful operation
  '/masters/{masterNumber}/ports/{portNumber}/datastorage':
    get:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/masterNumber'
        - $ref: '#/components/parameters/portNumber'
      summary: Read the Data Storage of the specified port
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dataStorageGetPost'
    post:
      tags:
        - ports
      parameters:
        - $ref: '#/components/parameters/masterNumber'
        - $ref: '#/components/parameters/portNumber'
      summary: Write the Data Storage of the specified port
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dataStorageGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices':
    get:
      tags:
        - devices
      summary: Read all the available deviceName keys.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - deviceName
                  properties:
                    deviceName:
                      type: string
                example:
                  - deviceName: DT35
                  - deviceName: TAD081
                  - deviceName: BNI_IOL
  '/devices/{deviceName}/identification':
    get:
      tags:
        - devices
      summary: Read the identification of the device at the specified port
      description: >-
        *Implementation hint*: You have to request the ISDU values of
        applicationSpecificTag, locationTag and functionTag (if they are
        supported by the device).
      parameters:
        - $ref: '#/components/parameters/deviceName'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/portIdentificationGet'
    post:
      tags:
        - devices
      summary: Write application specific port identification
      parameters:
        - $ref: '#/components/parameters/deviceName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/portIdentificationPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/processdata/value':
    get:
      tags:
        - devices
      summary: >-
        Read the process data (input and optionally the output) and the pin2
        value (if it is used) of the specified port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/direction'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceProcessDataValueGet'
    post:
      tags:
        - devices
      summary: >-
        Write the process data (output) and the pint2 value (if it is used) of
        the specific port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceProcessDataValuePost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/parameters':
    get:
      tags:
        - devices
      summary: >-
        Read the available parameter indices and parameter names. Requires the
        IODD support.
      parameters:
        - $ref: '#/components/parameters/deviceName'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParametersGet'
  '/devices/{deviceName}/parameters/{index}/value':
    get:
      tags:
        - devices
      summary: Read the parameter with the given index from the specified port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParameterValueGetPost'
    post:
      tags:
        - devices
      summary: Write the parameter with the given index from the specified port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceParameterValueGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/parameters/{parameterName}/value':
    get:
      tags:
        - devices
      summary: >-
        Read the parameter with the given index from the specified port.
        Requires IODD support.
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/parameterName'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParameterValueGetPost'
    post:
      tags:
        - devices
      summary: >-
        Write the parameter with the given index from the specified port.
        Requires IODD support.
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/parameterName'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceParameterValueGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/parameters/{index}/subindices':
    get:
      tags:
        - devices
      summary: >-
        Read the available parameter sub-indices, sub-parameter names. Requires
        IODD support.
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceSubParametersGet'
  '/devices/{deviceName}/parameters/{parameterName}/subindices':
    get:
      tags:
        - devices
      summary: >-
        Read the available parameter sub-indices, sub-parameter names. Requires
        IODD support.
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/parameterName'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceSubParametersGet'
  '/devices/{deviceName}/parameters/{index}/subindices/{subindex}/value':
    get:
      tags:
        - devices
      summary: >-
        Read the parameter with the given index and subindex from the specified
        port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/subindex'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParameterSubindexValueGetPost'
    post:
      tags:
        - devices
      summary: >-
        Write the parameter with the given index and subindex from the specified
        port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/subindex'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceParameterSubindexValueGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/parameters/{parameterName}/subindices/{subParameterName}/value':
    get:
      tags:
        - devices
      summary: >-
        Read the parameter with the given index and subindex from the specified.
        Requires IODD support. port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/parameterName'
        - $ref: '#/components/parameters/subParameterName'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceParameterSubindexValueGetPost'
    post:
      tags:
        - devices
      summary: >-
        Write the parameter with the given index and subindex from the
        specified. Requires IODD support. port
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/parameterName'
        - $ref: '#/components/parameters/subParameterName'
        - $ref: '#/components/parameters/format'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/deviceParameterSubindexValueGetPost'
      responses:
        '200':
          description: Successful operation
  '/devices/{deviceName}/events':
    get:
      tags:
        - devices
      parameters:
        - $ref: '#/components/parameters/deviceName'
        - $ref: '#/components/parameters/eventTop'
        - $ref: '#/components/parameters/eventBottom'
      summary: Read the Device event log.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deviceEventsGet'
components:
  schemas:
    cycleTime:
      type: object
      required:
        - value
        - unit
      properties:
        value:
          type: number
        unit:
          type: string
          enum:
            - ms
    event:
      type: object
    processData:
      allOf:
        - type: object
          properties:
            direction:
              $ref: '#/components/schemas/direction'
            format:
              $ref: '#/components/schemas/format'
      oneOf:
        - type: object
          required:
            - interval
          properties:
            interval:
              $ref: '#/components/schemas/cycleTime'
        - type: object
          required:
            - onChange
          properties:
            onChange:
              type: boolean
    format:
      type: string
      enum:
        - raw
        - iodd
      default: iodd
    direction:
      type: string
      enum:
        - in
        - out
        - both
      default: in
    eventOrigin:
      type: string
      enum:
        - ALL
        - MASTER
        - PORT
        - DEVICE
      default: ALL
    eventMasterNumber:
      type: number
    eventPortNumber:
      type: integer
    eventDeviceName:
      type: string
    eventTop:
      type: number
    eventBottom:
      type: number
    identificationMasters:
      type: array
      items:
        type: object
        required:
          - masterNumber
        properties:
          masterNumber:
            type: number
          serialNumber:
            type: string
          locationTag:
            type: string
      example:
        - masterNumber: 1
          serialNumber: lsdfkjke93922
          locationTag: slot 5
        - masterNumber: 2
          serialNumber: dsadasda25632
          locationTag: slot 6
    identificationGet:
      required:
        - vendorName
        - vendorId
        - masterId
        - masterType
      type: object
      properties:
        vendorName:
          type: string
        vendorId:
          type: integer
        masterId:
          type: integer
        masterType:
          type: string
          enum:
            - Unspecific
            - Master acc. V1.0
            - Master acc. V1.1
            - FS_Master
            - W_Master
        serialNumber:
          type: string
        orderCode:
          type: string
        productName:
          type: string
        hardwareRevision:
          type: string
        softwareRevision:
          type: string
        website:
          type: string
        manual:
          type: string
        applicationSpecificTag:
          type: string
        locationTag:
          type: string
        functionTag:
          type: string
      example:
        vendorName: SICK AG
        vendorId: 26
        masterId: 42
        masterType: Master acc. V1.0
        serialNumber: IOLM123456
        orderCode: PROD-123456
        productName: IO-Link Master
        hardwareRevision: 3.2.1.444R
        softwareRevision: 3.2.1.888R
        website: 'http://www.sick.de/io-link-master'
        manual: 'http://www.sick.de/io-link-master/documentation.pdf'
        applicationSpecificTag: Fallback reader at the end of the belt
        locationTag: Down under
        functionTag: Code reading
    identificationPost:
      type: object
      properties:
        applicationSpecificTag:
          type: string
        locationTag:
          type: string
        functionTag:
          type: string
      example:
        applicationSpecificTag: Fallback reader at the end of the belt
        locationTag: Down under
        functionTag: Code reading
    gatewayCapabilitiesGet:
      required:
        - ioddSupported
      type: object
      properties:
        ioddSupported:
            type: boolean
      example:
        ioddSupported: true
    masterCapabilitiesGet:
      required:
        - maxNumberOfPorts
        - maxPowerSupply
      type: object
      properties:
        maxNumberOfPorts:
          type: integer
        maxPowerSupply:
          type: object
          required:
            - value
            - unit
          properties:
            value:
              type: number
            unit:
              type: string
      example:
        maxNumberOfPorts: 8
        maxPowerSupply:
          value: 0.3
          unit: A
    eventTime:
      description: Timestamp (format defined in DIN ISO 8601). This field can give an absolute time or a relative time. Both formats are defined in DIN ISO 8601.
      type: string
    eventSeverity:
      description: Indicates the severity of the message. The IO-Link EventType NOTIFICATION maps to NOTICE, WARNING to WARNING and ERROR to ERROR.
      type: string
      enum:
        - EMERGENCY
        - ALERT
        - CRITICAL
        - ERROR
        - WARNING
        - NOTICE
        - INFO
        - DEBUG
    eventOriginObject:
      type: object
      properties:
        gateway:
          type: string
        master:
          description: This property is mandatory for IO-Link Master Events, IO-Link Port Events IO-Link Device Events and should not be used for other log entries.
          type: number
        port:
          description: This property is mandatory for IO-Link Port Events and IO-Link Device Events and should not be used for other log entries.
          type: number
        device:
          description: This property is mandatory for IO-Link Device Events and should not be  used for other log entries.
          type: string
    eventMessageObject:
      type: object
      properties:
        code:
          description: IO-Link Port EventCode or IO-Link Device EventCode. This property is mandatory for IO-Link Port Events or IO-Link Device Events.
          type: number
        mode:
          description: IO-Link Port Event Mode or IO-Link Device EventMode. This property is mandatory for IO-Link Port Events or IO-Link Device Events.
          type: string
          enum:
            - SINGLE_SHOT
            - APPEARS
            - DISAPPEARS
        text:
          type: string
    gatewayEventsGet:
      type: array
      items:
        type: object
        required:
          - time
          - severity
          - origin
          - message
        properties:
          time:
            $ref: '#/components/schemas/eventTime'
          severity:
            $ref: '#/components/schemas/eventSeverity'
          origin:
            $ref: '#/components/schemas/eventOriginObject'
          message:
            $ref: '#/components/schemas/eventMessageObject'
      example:
        - time: '2018-05-18T07:31:54.123Z'
          severity: WARNING
          origin:
            master: 1
            port: 1
            device: Temp_sensor_1
          message:
            code: 16912
            mode: APPEARED
            text: Device temperature over-run – Clear source of heat
        - time: '2018-05-18T07:35:54.123Z'
          severity: NOTIFICATION
          origin:
            master: 1
            port: 2
          message:
            code: 65314
            mode: SINGLESHOT
            text: Device communication lost
    deviceEventsGet:
      type: array
      items:
        type: object
        required:
          - time
          - severity
          - origin
          - message
        properties:
          time:
            $ref: '#/components/schemas/eventTime'
          severity:
            $ref: '#/components/schemas/eventSeverity'
          origin:
            required:
              - master
              - port
              - device
            allOf:
              - $ref: '#/components/schemas/eventOriginObject'
          message:
            required:
              - code
              - mode
            allOf:
              - $ref: '#/components/schemas/eventMessageObject'
      example:
        - time: '2018-05-18T07:31:54.123Z'
          severity: WARNING
          origin:
            master: 1
            port: 1
            device: "Temperature_sensor_1"
          message:
            code: 16912
            mode: APPEARED
            text: Device temperature over-run – Clear source of heat
    configurationGetPost:
      type: object
      properties:
        ethIpv4:
          type: array
          items:
            type: object
            required:
              - ipAddress
              - subnetMask
              - standardGateway
            properties:
              ipAddress:
                type: string
              subnetMask:
                type: string
              standardGateway:
                type: string
        ethIpv6:
          type: array
          items:
            type: object
      example:
        ethIpv4:
          - ipAddress: 192.168.1.13
            subnetMask: 255.255.255.0
            standardGateway: 192.168.1.1
    mqttConfigurationGetPost:
      type: object
      required:
        - brokerAddress
        - keepAliveTime
      properties:
        brokerAddress:
          type: string
        username:
          type: string
        password:
          type: string
        lastWill:
          type: object
          required:
            - topic
            - message
            - qoS
            - retain
          properties:
            topic:
              type: string
            message:
              type: string
            qoS:
              type: string
            retain:
              type: string
        keepAliveTime:
          type: integer
    mqttConfigurationTopic:
      allOf:
        - type: object
          required:
            - topicName
            - qos
            - deviceName
          properties:
            topicName:
              type: string
            qos:
              type: string
              enum:
                - At most once
                - At least once
                - Exactly once
            deviceName:
              type: string
              description: Unique deviceName.
        - oneOf:
            - type: object
              required:
                - event
                - processData
              properties:
                event:
                  $ref: '#/components/schemas/event'
                processData:
                  $ref: '#/components/schemas/processData'
    mqttConfigurationTopicPost:
      allOf:
        - $ref: '#/components/schemas/mqttConfigurationTopic'
      example:
        topicName: PD input
        qos: At leas once
        deviceName: DT35
        processData:
          direction: in
          format: iodd
          interval:
            value: 10
            unit: ms
    mqttConfigurationTopicGet:
      allOf:
        - type: object
          required:
            - topicId
          properties:
            topicId:
              type: integer
        - $ref: '#/components/schemas/mqttConfigurationTopic'
      example:
        topicId: 1
        topicName: PD input
        qos: At leas once
        deviceName: DT35
        processData:
          direction: in
          format: iodd
          interval:
            value: 10
            unit: ms
    portStatusGet:
      type: object
      required:
        - portStatusInfo
      properties:
        portStatusInfo:
          type: string
          enum:
            - NO_DEVICE
            - DEACTIVATED
            - INCORRECT_DEVICE
            - PREOPERATE
            - OPERATE
            - DI_C/Q
            - DO_C/Q
        ioLinkRevision:
          description: >-
            Mandatory if the portStatusInfo is INCORRECT_DEVICE, PREOPERATE or
            OPERATE.
          type: string
          enum:
            - '1.0'
            - '1.1'
        transmissionRate:
          description: >-
            Mandatory if the portStatusInfo is INCORRECT_DEVICE, PREOPERATE or
            OPERATE.
          type: string
          enum:
            - NOT_DETECTED
            - COM1
            - COM2
            - COM3
        masterCycleTime:
          description: >-
            Mandatory if the portStatusInfo is INCORRECT_DEVICE, PREOPERATE or
            OPERATE.
          type: object
          allOf:
            - $ref: '#/components/schemas/cycleTime'
      example:
        portStatusInfo: OPERATE
        ioLinkRevision: '1.1'
        transmissionRate: COM2
        masterCycleTime:
          value: 2.3
          unit: ms
    portIdentificationGet:
      required:
        - vendorId
        - deviceId
        - ioLinkRevision
      type: object
      properties:
        vendorId:
          type: integer
        deviceId:
          type: integer
        ioLinkRevision:
          type: string
          enum:
            - '1.0'
            - '1.1'
        vendorName:
          description: Mandatory if the Device suports the ISDU.
          type: string
        vendorText:
          type: string
        productName:
          description: Mandatory if the Device suports the ISDU.
          type: string
        productId:
          type: string
        productText:
          type: string
        serialNumber:
          type: string
        hardwareRevision:
          type: string
        firmwareRevision:
          type: string
        applicationSpecificTag:
          type: string
        locationTag:
          type: string
        functionTag:
          type: string
      example:
        vendorId: 26
        deviceId: 42
        ioLinkRevision: '1.1'
        vendorName: SICK AG
        vendorText: Sensor Intelligence.
        productName: WTxx16
        productId: PROD-123456
        productText: Light switch
        serialNumber: IOLM123456
        hardwareRevision: 3.2.1.444R
        firmwareRevision: 3.2.1.888R
        applicationSpecificTag: Fallback light switch at the end of the belt
        locationTag: Down under
        functionTag: Check end of belt
    portIdentificationPost:
      type: object
      properties:
        applicationSpecificTag:
          type: string
          example: Fallback light switch at the end of the belt
        locationTag:
          type: string
          example: Down under
        functionTag:
          type: string
          example: Check start of belt
      example:
        applicationSpecificTag: Fallback light switch at the end of the belt
        locationTag: Down under
        functionTag: Check start of belt
    portCapabilitiesGet:
      type: object
      required:
        - maxPowerSupply
        - portType
      properties:
        maxPowerSupply:
          type: object
          required:
            - value
            - unit
          properties:
            value:
              type: number
            unit:
              type: string
        portType:
          type: string
          enum:
            - CLASS_A
            - CLASS_A_WITH_PORT_POWER_OFF_ON
            - CLASS_B
            - FS_PORT_A_WITHOUT_OSSDE
            - FS_PORT_A_WITH_OSSDE
            - FS_PORT_B
            - W_MASTER
      example:
        maxPowerSupply:
          value: 0.3
          unit: A
        portType: CLASS_A
    portConfigurationGet:
      type: object
      required:
        - portMode
        - pin2Configuration
        - deviceName
      properties:
        portMode:
          type: string
          enum:
            - DEACTIVATED
            - IOLINK_MANUAL
            - IOLINK_AUTOSTART
            - DIGITAL_INPUT
            - DIGITAL_OUTPUT
        validationAndBackup:
          description: Used by the IO-Link Master just when portMode is IOLINK_MANUAL.
          type: string
          enum:
            - NO_DEVICE_CHECK
            - TYPE_COMPATIBLE_DEVICE_V1.0
            - TYPE_COMPATIBLE_DEVICE_V1.1
            - TYPE_COMPATIBLE_DEVICE_V1.1_BACKUP_AND_RESTORE
            - TYPE_COMPATIBLE_DEVICE_V1.1_RESTORE
        cycleTime:
          description: >-
            Used by the IO-Link Master just when portMode is IOLINK_MANUAL or
            IOLINK_AUTOSTART. Default value is 0 ms which means as fast as
            possible.
          type: object
          allOf:
            - $ref: '#/components/schemas/cycleTime'
        vendorId:
          description: >-
            Used by the IO-Link Master just when portMode is IOLINK_MANUAL and
            validationAndBackup is not NO_DEVICE_CHECK.
          type: integer
        deviceId:
          description: >-
            Used by the IO-Link Master just when portMode is IOLINK_MANUAL and
            validationAndBackup is not NO_DEVICE_CHECK.
          type: integer
        pin2Configuration:
          type: string
          enum:
            - NOT_SUPPORTED
            - DIGITAL_INPUT
            - DIGITAL_OUTPUT
            - ANALOG_INPUT
            - ANALOG_OUTPUT
            - POWER_2
        deviceName:
          type: string
      example:
        portMode: IOLINK_AUTOSTART
        validationAndBackup: TYPE_COMPATIBLE_DEVICE_V1.1
        pin2Configuration: ANALOG_INPUT
        cycleTime:
          value: 2.3
          unit: ms
        vendorId: 26
        deviceId: 333
        deviceName: Distance_sensor_1
    portConfigurationPost:
      type: object
      required:
        - portMode
        - pin2Configuration
      properties:
        portMode:
          type: string
          enum:
            - DEACTIVATED
            - IOLINK_MANUAL
            - IOLINK_AUTOSTART
            - DIGITAL_INPUT
            - DIGITAL_OUTPUT
        validationAndBackup:
          description: >-
            Mandatory if portMode is IOLINK_MANUAL. Must not be used with portMode
            other than IOL_MANUAL.
          type: string
          enum:
            - NO_DEVICE_CHECK
            - TYPE_COMPATIBLE_DEVICE_V1.0
            - TYPE_COMPATIBLE_DEVICE_V1.1
            - TYPE_COMPATIBLE_DEVICE_V1.1_BACKUP_AND_RESTORE
            - TYPE_COMPATIBLE_DEVICE_V1.1_RESTORE
        cycleTime:
          description: >-
            If no cycleTime configured with portMode IOLINK_MANUAL or
            IOLINK_AUTOSTART, the possible fastest cycle time is used by the
            IO-Link Master.
          type: object
          allOf:
            - $ref: '#/components/schemas/cycleTime'
        vendorId:
          description: >-
            Mandatory if portMode is IOLINK_MANUAL and validationAndBackup is not
            NO_DEVICE_CHECK.
          type: integer
        deviceId:
          description: >-
            Mandatory if portMode is IOLINK_MANUAL and validationAndBackup is not
            NO_DEVICE_CHECK.
          type: integer
        pin2Configuration:
          type: string
          enum:
            - NOT_SUPPORTED
            - DIGITAL_INPUT
            - DIGITAL_OUTPUT
            - ANALOG_INPUT
            - ANALOG_OUTPUT
            - POWER_2
        deviceName:
          type: string
      example:
        portMode: IOLINK_AUTOSTART
        validationAndBackup: TYPE_COMPATIBLE_DEVICE_V1.1
        pin2Configuration: ANALOG_INPUT
        cycleTime:
          value: 2.3
          unit: ms
        vendorId: 26
        deviceId: 333
        deviceName: Distance_sensor_1
    dataStorageGetPost:
      type: object
      required:
        - header
        - content
      properties:
        header:
          type: object
          required:
            - vendorId
            - deviceId
            - ioLinkRevision
          properties:
            vendorId:
              type: integer
            deviceId:
              type: integer
            ioLinkRevision:
              type: string
              enum:
                - '1.0'
                - '1.1'
        content:
          description: Base64 coded DS data Ojects. Max size = 2KB*1.33.
          type: array
          items:
            type: integer
      example:
        header:
          vendorId: 15
          deviceId: 65253
          ioLinkRevision: '1.1'
        content: dasdASDasddaSdASdASdasDasdASdasDASdasasd
    pin2Value:
      type: boolean
      description: >
        IO-Link cable pin2 level if it is used as digital input or output.
        (false - 0 V, true - 24 V)
    pin4Value:
      type: boolean
      description: >
        IO-Link cable pin4 (C/Q) level if it is used as digital input or output
        (SIO mode). (false - 0 V, true - 24 V)
    processDataValue:
      type: object
      required:
        - valid
        - value
      properties:
        valid:
          type: boolean
        value:
          oneOf:
            - $ref: '#/components/schemas/deviceRawTypeValue'
            - $ref: '#/components/schemas/deviceSimpleTypeValue'
            - $ref: '#/components/schemas/deviceComplexTypeValue'
    deviceProcessDataValueGet:
      type: object
      properties:
        pin2Value:
          $ref: '#/components/schemas/pin2Value'
        pin4Value:
          $ref: '#/components/schemas/pin4Value'
        in:
          $ref: '#/components/schemas/processDataValue'
        out:
          $ref: '#/components/schemas/processDataValue'
      example:
        format=raw:
          pin2Value: true
          in:
            valid: true
            value:
              - 12
              - 22
              - 216
        format=iodd:
          pin2Value: true
          in:
            valid: true
            value:
              Distance:
                value: 55
              Quality:
                value: 12
        sio mode:
          pin2Value: true
          pin4Value: false
    deviceProcessDataValuePost:
      type: object
      properties:
        pin2Value:
          $ref: '#/components/schemas/pin2Value'
        pin4Value:
          $ref: '#/components/schemas/pin4Value'
        out:
          $ref: '#/components/schemas/processDataValue'
      example:
        format=raw:
          pin2Value:
            - 0
          out:
            valid: true
            value:
              - 12
              - 22
              - 216
        format=iodd:
          pin2Value:
            - 0
          out:
            valid: true
            value:
              Distance: 55
              Quality: 12
    deviceRawTypeValue:
      type: array
      description: The value in raw format.
      items:
        type: number
        minimum: 0
        maximum: 255
    deviceSimpleTypeValue:
      type: object
      description: The value (with simple type) in iodd format.
      properties:
        value:
          oneOf:
            - type: string
            - type: number
        unit:
          type: string
      required:
        - value
    deviceComplexTypeValue:
      type: object
      minProperties: 1
      maxProperties: 255
      description: The value (with complex type) in iodd format.
      additionalProperties:
        $ref: '#/components/schemas/deviceSimpleTypeValue'
    deviceParametersGet:
      type: array
      items:
        type: object
        required:
          - index
          - parameterName
        properties:
          index:
            type: number
          parameterName:
            type: string
      example:
        - index: 0
          parameterName: Direct_Parameter_Page_1
        - index: 1
          parameterName: Direct_Parameter_Page_2
        - index: 2
          parameterName: System_Command
    deviceSubParametersGet:
      type: array
      items:
        type: object
        required:
          - subIndex
          - subParameterName
        properties:
          subIndex:
            type: number
          subParameterName:
            type: string
      example:
        - subIndex: 1
          subParameterName: Master Command
        - subIndex: 2
          subParameterName: Master Cycle Time
        - subIndex: 3
          subParameterName: Minimum cycle Time
    deviceParameterValueGetPost:
      oneOf:
        - $ref: '#/components/schemas/deviceRawTypeValue'
        - $ref: '#/components/schemas/deviceSimpleTypeValue'
        - $ref: '#/components/schemas/deviceComplexTypeValue'
      example:
        format=raw:
          - 0
          - 156
          - 125
          - 25
        'format=iodd, simpleType':
          value: 15
        'format=iodd, complexType':
          Distance:
            value: 15
          Quality:
            value: 12
    deviceParameterSubindexValueGetPost:
      oneOf:
        - $ref: '#/components/schemas/deviceRawTypeValue'
        - $ref: '#/components/schemas/deviceSimpleTypeValue'
      example:
        format=raw:
          - 0
          - 156
          - 125
          - 25
        format=iodd:
          value: 152
          unit: mm
    ioddIdentification:
      type: object
      required:
        - vendorId
        - deviceId
        - version
        - releaseDate
        - ioLinkRevision
      properties:
        vendorId:
          type: number
        deviceId:
          type: number
        version:
          type: string
        releaseDate:
          type: string
        ioLinkRevision:
          type: string
          enum:
            - '1.0'
            - '1.1'
    ioddFile:
      type: string
      format: binary
    ioddsGet:
      type: array
      items:
        $ref: '#/components/schemas/ioddIdentification'
      example:
        - vendorId: 1234
          deviceId: 4567
          version: '4.3'
          releaseDate: '2018-01-02'
          ioLinkRevision: '1.1'
        - vendorid: 4321
          deviceId: 8765
          version: '2.1'
          releaseDate: '2015-01-02'
          ioLinkRevision: '1.1'
  parameters:
    vendorId:
      name: vendorId
      in: path
      description: IO-Link VendorID
      required: true
      schema:
        type: integer
    deviceId:
      name: deviceId
      in: path
      description: IO-Link DeviceID
      required: true
      schema:
        type: integer
    ioLinkRevision:
      name: ioLinkRevision
      in: path
      description: IO-Link Revision
      required: true
      schema:
        type: string
        enum:
          - '1.0'
          - '1.1'
    mqttTopicId:
      name: topicId
      in: path
      description: >-
        ID of a configured MQTT topic. This the position of the topic in the
        topics list.
      required: true
      schema:
        type: integer
    masterNumber:
      name: masterNumber
      in: path
      description: Master identification number starting with 1
      schema:
        type: integer
      required: true
    portNumber:
      name: portNumber
      in: path
      description: Port identification number starting with 1
      schema:
        type: integer
      required: true
    deviceName:
      name: deviceName
      in: path
      description: >-
        Device Name configured with the port/configuration URL. Default Device
        Name is 'masterNportM' where 'N' means the masterNumber and 'M' means
        the portNumber.
      schema:
        type: string
      required: true
    eventOrigin:
      name: origin
      in: query
      description: The event source to filter
      schema:
        $ref: '#/components/schemas/eventOrigin'
    eventMasterNumber:
      name: masterNumber
      in: query
      description: masterId is only allowed with origin=MASTER
      schema:
        $ref: '#/components/schemas/eventMasterNumber'
    eventPortNumber:
      name: portNumber
      in: query
      description: portId is only allowed with origin=PORT
      schema:
        $ref: '#/components/schemas/eventPortNumber'
    eventDeviceName:
      name: deviceName
      in: query
      description: deviceName is only allowed with origin=DEVICE
      schema:
        $ref: '#/components/schemas/eventDeviceName'
    eventTop:
      name: top
      in: query
      description: >-
        Delivers the oldest n events of the event buffer. top is mutually
        exclusive to bottom.
      schema:
        $ref: '#/components/schemas/eventTop'
    eventBottom:
      name: bottom
      in: query
      description: >-
        Delivers the youngest n events of the event buffer. bottom is mutually
        exclusive to top.
      schema:
        $ref: '#/components/schemas/eventBottom'
    format:
      name: format
      in: query
      description: Value format in response document
      schema:
        $ref: '#/components/schemas/format'
    direction:
      name: direction
      in: query
      description: Process data element(s) in respose document
      schema:
        $ref: '#/components/schemas/direction'
    index:
      name: index
      in: path
      description: Index of ISDU variable
      schema:
        type: integer
      required: true
    subindex:
      name: subindex
      in: path
      description: Subindex of ISDU variable with the given index
      schema:
        type: integer
      required: true
    parameterName:
      name: parameterName
      in: path
      description: >-
        Parameter name. Comes from the IODD but might be reformatted according
        to the JSON mapping specification.
      schema:
        type: string
      required: true
    subParameterName:
      name: subParameterName
      in: path
      description: >-
        Sub-parameter name. Comes from the IODD but might be reformatted
        according to the JSON mapping specification.
      schema:
        type: string
      required: true
  responses:
    errorResponse:
      description: Error
      content:
        application/json:
          schema:
            type: object
            required:
              - msgCode
              - message
            properties:
              msgCode:
                type: integer
              message:
                type: string
              iolError:
                type: integer
